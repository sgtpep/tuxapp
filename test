#!/usr/bin/env python
# -*- coding: utf-8 -*-
from __future__ import absolute_import, print_function, unicode_literals

import glob

from lib import (
  testing,
  tuxapp,
)

@tuxapp.memoize
def parse_arguments(arguments=None):
  import argparse
  parser = argparse.ArgumentParser()
  parser.add_argument('-a', '--arch', action='store_true')
  parser.add_argument('-e', '--execute', action='store_true')
  parser.add_argument('-r', '--root', action='store_true')
  parser.add_argument('-s', '--shell', action='store_true')
  parser.add_argument('-t', '--trace', action='store_true')
  parser.add_argument('arguments', metavar='app', nargs='*')
  parsed_arguments = parser.parse_args(arguments)
  return parsed_arguments

main = \
  tuxapp.handle_exceptions(
    lambda: \
      testing.execute_app(parse_distribution_argument(), tuxapp.check_app_installed(tuxapp.extract_app(parse_arguments().arguments[0])), tuple(parse_arguments().arguments[1:]), parse_arguments().trace) \
        if parse_arguments().execute and parse_arguments().arguments else \
      testing.execute_root_shell(parse_distribution_argument()) \
        if parse_arguments().root else \
      testing.execute_shell(parse_distribution_argument()) \
        if parse_arguments().shell else \
      testing.test_app(tuxapp.extract_app(parse_arguments().arguments[0])) \
        if len(parse_arguments().arguments) == 1 else \
      testing.test_apps(tuxapp.extract_app(argument) for argument in parse_arguments().arguments or glob.iglob(tuxapp.get_appfile_path('*')))
  )

parse_distribution_argument = lambda arguments=None: \
  'arch' \
    if parse_arguments(arguments).arch else \
  testing.get_default_distribution()

if __name__ == '__main__':
  main()
